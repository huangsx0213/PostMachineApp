/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package PostMachineApp;

import java.awt.Font;
import java.io.IOException;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Date;
import java.util.Enumeration;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.UIManager;
import javax.swing.plaf.FontUIResource;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author MyTest
 */
public class PostMachineApp extends javax.swing.JFrame {

    /**
     * Creates new form Application1
     */
    public PostMachineApp() {
        initComponents();
        fillTable();
        ForumPost ForumPost = XMLUtil.getForumPostByID(String.valueOf(1));
        fillForm(ForumPost);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jTabbedPane = new javax.swing.JTabbedPane();
        jPanel_PostPopSetting = new javax.swing.JPanel();
        jPanel_Top = new javax.swing.JPanel();
        Title1 = new javax.swing.JLabel();
        TitleSeparator1 = new javax.swing.JSeparator();
        jLabel_FirefoxPath = new javax.swing.JLabel();
        jTextField_FirefoxPath = new javax.swing.JTextField();
        jPanel_Middle = new javax.swing.JPanel();
        Title2 = new javax.swing.JLabel();
        TitleSeparator2 = new javax.swing.JSeparator();
        jCheckBox_EnableThread = new javax.swing.JCheckBox();
        jTextField_ThreadID = new javax.swing.JTextField();
        jLabel_Profile = new javax.swing.JLabel();
        jTextField_Profile = new javax.swing.JTextField();
        jCheckBox_EnableUserAgent = new javax.swing.JCheckBox();
        jTextField_UserAgent = new javax.swing.JTextField();
        jLabel_StartTime = new javax.swing.JLabel();
        jTextField_StartTime = new javax.swing.JTextField();
        jCheckBox_EnableStopTime = new javax.swing.JCheckBox();
        jTextField_StopTime = new javax.swing.JTextField();
        jLabel_RefreshPostCount = new javax.swing.JLabel();
        jTextField_RefreshPostCount = new javax.swing.JTextField();
        jLabel_PostNumber = new javax.swing.JLabel();
        jTextField_PostCount = new javax.swing.JTextField();
        jLabel_PostInterval = new javax.swing.JLabel();
        jTextField_PostInterval = new javax.swing.JTextField();
        jLabel_AdditionalRandomTime = new javax.swing.JLabel();
        jTextField_AdditionalRandomTime = new javax.swing.JTextField();
        jLabel_PostUrl = new javax.swing.JLabel();
        jTextField_PostUrl = new javax.swing.JTextField();
        jLabel_PostContent = new javax.swing.JLabel();
        jTextField_PostContent = new javax.swing.JTextField();
        Save = new javax.swing.JButton();
        Delete = new javax.swing.JButton();
        New = new javax.swing.JButton();
        Run = new javax.swing.JButton();
        RunS = new javax.swing.JButton();
        jPanel_Bottom = new javax.swing.JPanel();
        jScrollPane = new javax.swing.JScrollPane();
        jTable = new javax.swing.JTable();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("PostMachineApp");
        setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N

        jTabbedPane.setPreferredSize(new java.awt.Dimension(800, 600));

        jPanel_PostPopSetting.setPreferredSize(new java.awt.Dimension(795, 595));

        jPanel_Top.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(0, 0, 0), 1, true));
        jPanel_Top.setPreferredSize(new java.awt.Dimension(775, 60));

        Title1.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        Title1.setForeground(new java.awt.Color(0, 0, 255));
        Title1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        Title1.setText("Global Parameters Setting");

        jLabel_FirefoxPath.setText("Firefox Installation Path:");

        jTextField_FirefoxPath.setText("default");
        jTextField_FirefoxPath.setToolTipText("Local firefox installation path,eg. D:\\\\Program Files\\\\Mozilla Firefox\\\\firefox.exe");

        javax.swing.GroupLayout jPanel_TopLayout = new javax.swing.GroupLayout(jPanel_Top);
        jPanel_Top.setLayout(jPanel_TopLayout);
        jPanel_TopLayout.setHorizontalGroup(
            jPanel_TopLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel_TopLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel_FirefoxPath)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jTextField_FirefoxPath)
                .addContainerGap())
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel_TopLayout.createSequentialGroup()
                .addGap(303, 303, 303)
                .addGroup(jPanel_TopLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(TitleSeparator1)
                    .addComponent(Title1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(299, 299, 299))
        );
        jPanel_TopLayout.setVerticalGroup(
            jPanel_TopLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel_TopLayout.createSequentialGroup()
                .addComponent(Title1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(TitleSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel_TopLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel_FirefoxPath)
                    .addComponent(jTextField_FirefoxPath, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanel_Middle.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(0, 0, 0), 1, true));

        Title2.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        Title2.setForeground(new java.awt.Color(0, 0, 255));
        Title2.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        Title2.setText("Thread Parameters Setting");

        jCheckBox_EnableThread.setText("Thread ID:");
        jCheckBox_EnableThread.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jCheckBox_EnableThreadActionPerformed(evt);
            }
        });

        jTextField_ThreadID.setText("1");
        jTextField_ThreadID.setToolTipText("Thread ID must be unique");
        jTextField_ThreadID.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField_ThreadIDActionPerformed(evt);
            }
        });

        jLabel_Profile.setText("Firefox Profile:");

        jTextField_Profile.setText("default");
        jTextField_Profile.setToolTipText("Firefox Profile Name");
        jTextField_Profile.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField_ProfileActionPerformed(evt);
            }
        });

        jCheckBox_EnableUserAgent.setText("User Agent:");
        jCheckBox_EnableUserAgent.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jCheckBox_EnableUserAgentActionPerformed(evt);
            }
        });

        jTextField_UserAgent.setToolTipText("User Agent String");
        jTextField_UserAgent.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField_UserAgentActionPerformed(evt);
            }
        });

        jLabel_StartTime.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel_StartTime.setText("Start Time:");

        jTextField_StartTime.setColumns(19);
        jTextField_StartTime.setText("2016-01-01 00:00:00");
        jTextField_StartTime.setToolTipText("Task Start Time");

        jCheckBox_EnableStopTime.setText("StopTime:");

        jTextField_StopTime.setColumns(19);
        jTextField_StopTime.setText("2018-12-31 23:59:59");
        jTextField_StopTime.setToolTipText("Task Stop Time");
        jTextField_StopTime.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField_StopTimeActionPerformed(evt);
            }
        });

        jLabel_RefreshPostCount.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel_RefreshPostCount.setText("Refresh Post Count:");

        jTextField_RefreshPostCount.setText("100");
        jTextField_RefreshPostCount.setToolTipText("Refresh Post Count");
        jTextField_RefreshPostCount.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField_RefreshPostCountActionPerformed(evt);
            }
        });

        jLabel_PostNumber.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel_PostNumber.setText("Post Count:");

        jTextField_PostCount.setText("65535");
        jTextField_PostCount.setToolTipText("Post Count");
        jTextField_PostCount.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField_PostCountActionPerformed(evt);
            }
        });

        jLabel_PostInterval.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel_PostInterval.setText("Post Interval:");

        jTextField_PostInterval.setText("11");
        jTextField_PostInterval.setToolTipText("Post Interval Time,unit is Second");
        jTextField_PostInterval.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField_PostIntervalActionPerformed(evt);
            }
        });

        jLabel_AdditionalRandomTime.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel_AdditionalRandomTime.setText("Additional Random Time:");

        jTextField_AdditionalRandomTime.setText("5");
        jTextField_AdditionalRandomTime.setToolTipText("Random Wait Time,unit is Second");
        jTextField_AdditionalRandomTime.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField_AdditionalRandomTimeActionPerformed(evt);
            }
        });

        jLabel_PostUrl.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel_PostUrl.setText("Post Url:");

        jTextField_PostUrl.setToolTipText("Post URL");
        jTextField_PostUrl.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField_PostUrlActionPerformed(evt);
            }
        });

        jLabel_PostContent.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel_PostContent.setText("Post Content:");

        jTextField_PostContent.setToolTipText("Post Content");
        jTextField_PostContent.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField_PostContentActionPerformed(evt);
            }
        });

        Save.setText("Save");
        Save.setToolTipText("Save a new thread or a edited thread");
        Save.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                SaveActionPerformed(evt);
            }
        });

        Delete.setText("Delete");
        Delete.setToolTipText("Delete a seleted thread");
        Delete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                DeleteActionPerformed(evt);
            }
        });

        New.setText("New");
        New.setToolTipText("Create a new thread form");
        New.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                NewActionPerformed(evt);
            }
        });

        Run.setText("RunAll");
        Run.setToolTipText("Run all of the enable threads");
        Run.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                RunActionPerformed(evt);
            }
        });

        RunS.setText("RunSelected");
        RunS.setToolTipText("Run the Selected thread");
        RunS.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                RunSActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel_MiddleLayout = new javax.swing.GroupLayout(jPanel_Middle);
        jPanel_Middle.setLayout(jPanel_MiddleLayout);
        jPanel_MiddleLayout.setHorizontalGroup(
            jPanel_MiddleLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel_MiddleLayout.createSequentialGroup()
                .addGap(300, 300, 300)
                .addGroup(jPanel_MiddleLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(TitleSeparator2)
                    .addComponent(Title2, javax.swing.GroupLayout.DEFAULT_SIZE, 173, Short.MAX_VALUE))
                .addGap(300, 300, 300))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel_MiddleLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(New)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(Save)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(Delete)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(RunS)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(Run)
                .addContainerGap())
            .addGroup(jPanel_MiddleLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel_MiddleLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel_MiddleLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                        .addComponent(jLabel_PostNumber, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jLabel_PostContent, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jLabel_StartTime, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jCheckBox_EnableThread, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addComponent(jLabel_PostUrl, javax.swing.GroupLayout.PREFERRED_SIZE, 79, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel_MiddleLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel_MiddleLayout.createSequentialGroup()
                        .addGroup(jPanel_MiddleLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jTextField_PostCount)
                            .addComponent(jTextField_ThreadID)
                            .addComponent(jTextField_StartTime, javax.swing.GroupLayout.DEFAULT_SIZE, 127, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel_MiddleLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jLabel_PostInterval, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jCheckBox_EnableStopTime, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel_Profile, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel_MiddleLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jTextField_Profile)
                            .addComponent(jTextField_PostInterval, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jTextField_StopTime, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 129, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel_MiddleLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel_MiddleLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(jLabel_RefreshPostCount, javax.swing.GroupLayout.PREFERRED_SIZE, 138, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(jCheckBox_EnableUserAgent, javax.swing.GroupLayout.Alignment.TRAILING))
                            .addComponent(jLabel_AdditionalRandomTime))
                        .addGap(10, 10, 10)
                        .addGroup(jPanel_MiddleLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jTextField_AdditionalRandomTime)
                            .addComponent(jTextField_RefreshPostCount, javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jTextField_UserAgent, javax.swing.GroupLayout.Alignment.LEADING)))
                    .addComponent(jTextField_PostContent)
                    .addComponent(jTextField_PostUrl))
                .addContainerGap())
        );
        jPanel_MiddleLayout.setVerticalGroup(
            jPanel_MiddleLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel_MiddleLayout.createSequentialGroup()
                .addComponent(Title2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(TitleSeparator2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel_MiddleLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel_Profile)
                    .addComponent(jTextField_Profile, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jTextField_ThreadID, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jCheckBox_EnableThread)
                    .addComponent(jCheckBox_EnableUserAgent)
                    .addComponent(jTextField_UserAgent, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel_MiddleLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel_MiddleLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jTextField_StartTime, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel_StartTime))
                    .addGroup(jPanel_MiddleLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jCheckBox_EnableStopTime)
                        .addComponent(jTextField_StopTime, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel_RefreshPostCount)
                        .addComponent(jTextField_RefreshPostCount, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(4, 4, 4)
                .addGroup(jPanel_MiddleLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel_PostNumber)
                    .addComponent(jTextField_PostCount, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel_PostInterval)
                    .addComponent(jTextField_PostInterval, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel_AdditionalRandomTime)
                    .addComponent(jTextField_AdditionalRandomTime, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel_MiddleLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel_PostUrl)
                    .addComponent(jTextField_PostUrl, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel_MiddleLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jTextField_PostContent, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel_PostContent))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel_MiddleLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(Delete)
                    .addComponent(Save)
                    .addComponent(New)
                    .addComponent(Run)
                    .addComponent(RunS))
                .addContainerGap())
        );

        jPanel_Bottom.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(0, 0, 0), 1, true));
        jPanel_Bottom.setPreferredSize(new java.awt.Dimension(454, 300));

        jScrollPane.setPreferredSize(new java.awt.Dimension(452, 250));

        jTable.setAutoCreateRowSorter(true);
        jTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null}
            },
            new String [] {
                "Enable", "ThreadID", "ProfileName", "PostCount", "PostInterval", "AdditionalRandomTime", "PostContent"
            }
        ));
        jTable.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTableMouseClicked(evt);
            }
        });
        jTable.getColumnModel().getColumn(0).setPreferredWidth(10);
        jTable.getColumnModel().getColumn(1).setPreferredWidth(10);
        jTable.getColumnModel().getColumn(2).setPreferredWidth(35);
        jTable.getColumnModel().getColumn(3).setPreferredWidth(20);
        jTable.getColumnModel().getColumn(4).setPreferredWidth(25);
        jTable.getColumnModel().getColumn(5).setPreferredWidth(10);
        jTable.getColumnModel().getColumn(6).setPreferredWidth(300);
        jScrollPane.setViewportView(jTable);

        javax.swing.GroupLayout jPanel_BottomLayout = new javax.swing.GroupLayout(jPanel_Bottom);
        jPanel_Bottom.setLayout(jPanel_BottomLayout);
        jPanel_BottomLayout.setHorizontalGroup(
            jPanel_BottomLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        jPanel_BottomLayout.setVerticalGroup(
            jPanel_BottomLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel_BottomLayout.createSequentialGroup()
                .addComponent(jScrollPane, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        javax.swing.GroupLayout jPanel_PostPopSettingLayout = new javax.swing.GroupLayout(jPanel_PostPopSetting);
        jPanel_PostPopSetting.setLayout(jPanel_PostPopSettingLayout);
        jPanel_PostPopSettingLayout.setHorizontalGroup(
            jPanel_PostPopSettingLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel_PostPopSettingLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel_PostPopSettingLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jPanel_Bottom, javax.swing.GroupLayout.DEFAULT_SIZE, 775, Short.MAX_VALUE)
                    .addComponent(jPanel_Top, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel_Middle, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        jPanel_PostPopSettingLayout.setVerticalGroup(
            jPanel_PostPopSettingLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel_PostPopSettingLayout.createSequentialGroup()
                .addComponent(jPanel_Top, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel_Middle, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel_Bottom, javax.swing.GroupLayout.DEFAULT_SIZE, 273, Short.MAX_VALUE)
                .addContainerGap())
        );

        jTabbedPane.addTab("PostPopSetting", jPanel_PostPopSetting);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jTabbedPane, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jTabbedPane, javax.swing.GroupLayout.DEFAULT_SIZE, 595, Short.MAX_VALUE)
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void jTextField_AdditionalRandomTimeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextField_AdditionalRandomTimeActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextField_AdditionalRandomTimeActionPerformed

    private void jTextField_PostIntervalActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextField_PostIntervalActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextField_PostIntervalActionPerformed

    private void jTextField_PostCountActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextField_PostCountActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextField_PostCountActionPerformed

    private void jTextField_StopTimeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextField_StopTimeActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextField_StopTimeActionPerformed

    private void jTextField_PostContentActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextField_PostContentActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextField_PostContentActionPerformed

    private void SaveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_SaveActionPerformed
        try {
            // TODO add your handling code here:
            EnableThread = this.jCheckBox_EnableThread.isSelected();
            ThreadID = Integer.parseInt(this.jTextField_ThreadID.getText());
            FirefoxPath = this.jTextField_FirefoxPath.getText();
            Profile = this.jTextField_Profile.getText();
            EnableUserAgent = this.jCheckBox_EnableUserAgent.isSelected();
            UserAgent = this.jTextField_UserAgent.getText();
            StartTimeString = this.jTextField_StartTime.getText();
            SimpleDateFormat format = new SimpleDateFormat("yyyy-MM-dd HH:mm:ss");
            Date startDate = format.parse(StartTimeString);
            StartTime = startDate.getTime();
            EnableStopTime = this.jCheckBox_EnableStopTime.isSelected();
            StopTimeString = this.jTextField_StopTime.getText();
            Date stopDate = format.parse(StopTimeString);
            StopTime = stopDate.getTime();
            RefreshPostCount = Integer.parseInt(this.jTextField_RefreshPostCount.getText());
            PostCount = Long.parseLong(this.jTextField_PostCount.getText());
            PostInterval = Integer.parseInt(this.jTextField_PostInterval.getText());
            AdditionalRandomTime = Integer.parseInt(this.jTextField_AdditionalRandomTime.getText());
            PostUrl = this.jTextField_PostUrl.getText();
            PostContent = this.jTextField_PostContent.getText();
            ForumPost ForumPost = new ForumPost(EnableThread, ThreadID, FirefoxPath, Profile, EnableUserAgent, UserAgent, StartTime, EnableStopTime, StopTime, RefreshPostCount, PostCount, PostInterval, AdditionalRandomTime, PostUrl, PostContent);
            if (XMLUtil.ThreadIDisExisting(ForumPost)) {
                XMLUtil.update(ForumPost);
            } else {
                XMLUtil.add(ForumPost);
            }
        } catch (ParseException ex) {
            Logger.getLogger(PostMachineApp.class.getName()).log(Level.SEVERE, null, ex);
        }
        System.out.println("Save successfully！");
        fillTable();
    }//GEN-LAST:event_SaveActionPerformed

    private void fillTable() {
        XMLUtil.getAllForumPost();
        DefaultTableModel tableModel = (DefaultTableModel) jTable.getModel();
        tableModel.setRowCount(0);
        // 填充数据
        for (ForumPost ForumPost : XMLUtil.getAllForumPost()) {
            String[] arr = new String[7];
            arr[0] = ForumPost.getEnableThread().toString();
            arr[1] = ForumPost.getThreadID().toString();
            arr[2] = ForumPost.getProfile();
            arr[3] = Long.toString(ForumPost.getPostCount());
            arr[4] = Integer.toString(ForumPost.getPostInterval());
            arr[5] = Integer.toString(ForumPost.getAdditionalRandomTime());
            arr[6] = ForumPost.getPostContent();;

            // 添加数据到表格
            tableModel.addRow(arr);
        }

        // 更新表格
        jTable.invalidate();
    }

    private void jCheckBox_EnableThreadActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCheckBox_EnableThreadActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jCheckBox_EnableThreadActionPerformed

    private void jTextField_RefreshPostCountActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextField_RefreshPostCountActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextField_RefreshPostCountActionPerformed

    private void jCheckBox_EnableUserAgentActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCheckBox_EnableUserAgentActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jCheckBox_EnableUserAgentActionPerformed

    private void jTextField_UserAgentActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextField_UserAgentActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextField_UserAgentActionPerformed

    private void jTextField_PostUrlActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextField_PostUrlActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextField_PostUrlActionPerformed

    private void jTextField_ThreadIDActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextField_ThreadIDActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextField_ThreadIDActionPerformed

    private void DeleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_DeleteActionPerformed
        // TODO add your handling code here:
        String id = this.jTextField_ThreadID.getText();
        XMLUtil.deleteById(id);
        System.out.println("Delete successfully！");
        fillTable();
        ForumPost ForumPost = XMLUtil.getForumPostByID(String.valueOf(1));
        fillForm(ForumPost);
    }//GEN-LAST:event_DeleteActionPerformed

    private void jTableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTableMouseClicked
        // TODO add your handling code here:
        int selectRows = jTable.getSelectedRows().length;// 取得用户所选行的行数
        DefaultTableModel tableModel = (DefaultTableModel) jTable.getModel();

        if (selectRows == 1) {
            int selectedRowIndex = jTable.getSelectedRow(); // 取得用户所选单行 
            ThreadID = Integer.parseInt(tableModel.getValueAt(selectedRowIndex, 1).toString());
        }
        ForumPost ForumPost = XMLUtil.getForumPostByID(ThreadID.toString());
        fillForm(ForumPost);
    }//GEN-LAST:event_jTableMouseClicked

    private void NewActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_NewActionPerformed
        // TODO add your handling code here:
        this.jCheckBox_EnableThread.setSelected(true);
        this.jTextField_ThreadID.setText(Integer.toString(XMLUtil.getMaxId()+1));
        this.jTextField_FirefoxPath.setText("default");
        this.jTextField_Profile.setText("default");
        this.jCheckBox_EnableUserAgent.setSelected(false);
        this.jTextField_UserAgent.setText("");
        this.jTextField_StartTime.setText("2016-01-01 00:00:00");
        this.jCheckBox_EnableStopTime.setSelected(false);
        this.jTextField_StopTime.setText("2018-12-31 23:59:59");
        this.jTextField_RefreshPostCount.setText("200");
        this.jTextField_PostCount.setText("65535");
        this.jTextField_PostInterval.setText("11");
        this.jTextField_AdditionalRandomTime.setText("30");
        this.jTextField_PostUrl.setText("");
        this.jTextField_PostContent.setText("");
    }//GEN-LAST:event_NewActionPerformed

    private void RunActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_RunActionPerformed
        // TODO add your handling code here:
        List<ForumPost> ForumPosts=XMLUtil.getRunForumPost();
        Post.Post(ForumPosts);
    }//GEN-LAST:event_RunActionPerformed

    private void jTextField_ProfileActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextField_ProfileActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextField_ProfileActionPerformed

    private void RunSActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_RunSActionPerformed
        // TODO add your handling code here:
        String id = this.jTextField_ThreadID.getText();
       ForumPost ForumPost= XMLUtil.getForumPostByID(id);
       List<ForumPost> ForumPosts=new ArrayList<ForumPost>();
       ForumPosts.add(ForumPost);
       Post.Post(ForumPosts);
    }//GEN-LAST:event_RunSActionPerformed

    private void fillForm(ForumPost ForumPost) {
        this.jCheckBox_EnableThread.setSelected(ForumPost.getEnableThread());
        this.jTextField_ThreadID.setText(ForumPost.getThreadID().toString());
        this.jTextField_FirefoxPath.setText(ForumPost.getFirefoxPath());
        this.jTextField_Profile.setText(ForumPost.getProfile());
        this.jCheckBox_EnableUserAgent.setSelected(ForumPost.getEnableUserAgent());
        this.jTextField_UserAgent.setText(ForumPost.getUserAgent());
        this.jTextField_StartTime.setText(new java.text.SimpleDateFormat("yyyy-MM-dd HH:mm:ss").format(new java.util.Date(ForumPost.getStartTime())));
        this.jCheckBox_EnableStopTime.setSelected(ForumPost.getEnableStopTime());
        this.jTextField_StopTime.setText(new java.text.SimpleDateFormat("yyyy-MM-dd HH:mm:ss").format(new java.util.Date(ForumPost.getStopTime())));
        this.jTextField_RefreshPostCount.setText(String.valueOf(ForumPost.getRefreshPostCount()));
        this.jTextField_PostCount.setText(String.valueOf(ForumPost.getPostCount()));
        this.jTextField_PostInterval.setText(String.valueOf(ForumPost.getPostInterval()));
        this.jTextField_AdditionalRandomTime.setText(String.valueOf(ForumPost.getAdditionalRandomTime()));
        this.jTextField_PostUrl.setText(ForumPost.getPostUrl());
        this.jTextField_PostContent.setText(ForumPost.getPostContent());
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(PostMachineApp.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(PostMachineApp.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(PostMachineApp.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(PostMachineApp.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new PostMachineApp().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton Delete;
    private javax.swing.JButton New;
    private javax.swing.JButton Run;
    private javax.swing.JButton RunS;
    private javax.swing.JButton Save;
    private javax.swing.JLabel Title1;
    private javax.swing.JLabel Title2;
    private javax.swing.JSeparator TitleSeparator1;
    private javax.swing.JSeparator TitleSeparator2;
    private javax.swing.JCheckBox jCheckBox_EnableStopTime;
    private javax.swing.JCheckBox jCheckBox_EnableThread;
    private javax.swing.JCheckBox jCheckBox_EnableUserAgent;
    private javax.swing.JLabel jLabel_AdditionalRandomTime;
    private javax.swing.JLabel jLabel_FirefoxPath;
    private javax.swing.JLabel jLabel_PostContent;
    private javax.swing.JLabel jLabel_PostInterval;
    private javax.swing.JLabel jLabel_PostNumber;
    private javax.swing.JLabel jLabel_PostUrl;
    private javax.swing.JLabel jLabel_Profile;
    private javax.swing.JLabel jLabel_RefreshPostCount;
    private javax.swing.JLabel jLabel_StartTime;
    private javax.swing.JPanel jPanel_Bottom;
    private javax.swing.JPanel jPanel_Middle;
    private javax.swing.JPanel jPanel_PostPopSetting;
    private javax.swing.JPanel jPanel_Top;
    private javax.swing.JScrollPane jScrollPane;
    private javax.swing.JTabbedPane jTabbedPane;
    private javax.swing.JTable jTable;
    private javax.swing.JTextField jTextField_AdditionalRandomTime;
    private javax.swing.JTextField jTextField_FirefoxPath;
    private javax.swing.JTextField jTextField_PostContent;
    private javax.swing.JTextField jTextField_PostCount;
    private javax.swing.JTextField jTextField_PostInterval;
    private javax.swing.JTextField jTextField_PostUrl;
    private javax.swing.JTextField jTextField_Profile;
    private javax.swing.JTextField jTextField_RefreshPostCount;
    private javax.swing.JTextField jTextField_StartTime;
    private javax.swing.JTextField jTextField_StopTime;
    private javax.swing.JTextField jTextField_ThreadID;
    private javax.swing.JTextField jTextField_UserAgent;
    // End of variables declaration//GEN-END:variables
    private Boolean EnableThread;
    private Integer ThreadID;
    private String FirefoxPath;
    private String Profile;
    private Boolean EnableUserAgent;
    private String UserAgent;
    private String StartTimeString;
    private long StartTime;
    private Boolean EnableStopTime;
    private String StopTimeString;
    private long StopTime;
    private Integer RefreshPostCount;
    private long PostCount;
    private Integer PostInterval;
    private Integer AdditionalRandomTime;
    private String PostUrl;
    private String PostContent;
}
