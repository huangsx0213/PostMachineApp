/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package PostMachineApp.UserInterface;

import PostMachineApp.*;
import PostMachineApp.EntityInterface.ForumPost;
import PostMachineApp.ForumPostFactory;
import PostMachineApp.RunPost;
import PostMachineApp.XMLUtil.*;
import java.awt.Font;
import java.io.IOException;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Date;
import java.util.Enumeration;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.UIManager;
import javax.swing.plaf.FontUIResource;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author MyTest
 */
public class PostMachineApp extends javax.swing.JFrame {

    /**
     * Creates new form Application1
     */
    public PostMachineApp() {
        initComponents();
        fillTable();
        fillEntityTable();
        fillPostContentPoolTable();
        ForumPost ForumPost = TaskManagementDAO.getForumPostByID(String.valueOf(1));
        if (ForumPost != null) {
            fillForm(ForumPost);
        }
        GlobalSetting GlobalSetting = GlobalSettingDAO.getGlobalSettingByID(String.valueOf(1));
        if (GlobalSetting != null) {
            fillGlobalSettingForm(GlobalSetting);
        }
        Entity Entity = EntityDAO.getEntityByID(String.valueOf(1));
        if (Entity != null) {
            fillEntityForm(Entity);
        }
        PostContentEntity PostContentEntity = PostContentPoolDAO.getPostContentByID(String.valueOf(1));
        if (PostContentEntity != null) {
            fillPostContentForm(PostContentEntity);
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jTabbedPane_PostMachineApp = new javax.swing.JTabbedPane();
        jPanel_Console = new javax.swing.JPanel();
        jScrollPane_Console = new javax.swing.JScrollPane();
        jTextArea_Console = new javax.swing.JTextArea();
        jButtonClearConsole = new javax.swing.JButton();
        jPanel_TaskManagement = new javax.swing.JPanel();
        jPanel_Top = new javax.swing.JPanel();
        Title_TaskManagement = new javax.swing.JLabel();
        TitleSeparator_TaskManagement = new javax.swing.JSeparator();
        jCheckBox_EnableThread = new javax.swing.JCheckBox();
        jTextField_ThreadID = new javax.swing.JTextField();
        jLabel_Profile = new javax.swing.JLabel();
        jTextField_Profile = new javax.swing.JTextField();
        jLabel_StartTime = new javax.swing.JLabel();
        jTextField_StartTime = new javax.swing.JTextField();
        jCheckBox_EnableStopTime = new javax.swing.JCheckBox();
        jTextField_StopTime = new javax.swing.JTextField();
        jLabel_RefreshPostCount = new javax.swing.JLabel();
        jTextField_RefreshPostCount = new javax.swing.JTextField();
        jLabel_PostNumber = new javax.swing.JLabel();
        jTextField_PostCount = new javax.swing.JTextField();
        jLabel_FixedWaitTime = new javax.swing.JLabel();
        jTextField_FixedWaitTime = new javax.swing.JTextField();
        jLabel_RandomWaitTime = new javax.swing.JLabel();
        jTextField_RandomWaitTime = new javax.swing.JTextField();
        jLabel_PostUrl = new javax.swing.JLabel();
        jTextField_PostUrl = new javax.swing.JTextField();
        jLabel_PostContent = new javax.swing.JLabel();
        Save = new javax.swing.JButton();
        Delete = new javax.swing.JButton();
        New = new javax.swing.JButton();
        Run = new javax.swing.JButton();
        RunS = new javax.swing.JButton();
        jLabel_PostEntity = new javax.swing.JLabel();
        jComboBox_PostEntity = new javax.swing.JComboBox<>();
        jTextField_RestWaitTime = new javax.swing.JTextField();
        jLabel_RestWaitTime = new javax.swing.JLabel();
        jTextField_RestWaitPostCount = new javax.swing.JTextField();
        jLabel_RestWaitPostCount = new javax.swing.JLabel();
        jComboBox_PostContent = new javax.swing.JComboBox<>();
        jPanel_Bottom = new javax.swing.JPanel();
        jScrollPane = new javax.swing.JScrollPane();
        jTable = new javax.swing.JTable();
        jPanel_EntityManagement = new javax.swing.JPanel();
        jTabbedPane_SystemSettings = new javax.swing.JTabbedPane();
        jPanel_GlobalSetting = new javax.swing.JPanel();
        Title_GlobalParametersSetting = new javax.swing.JLabel();
        TitleSeparator_GlobalParametersSetting = new javax.swing.JSeparator();
        jLabel_FirefoxInstallationPath = new javax.swing.JLabel();
        jTextField_FirefoxInstallationPath = new javax.swing.JTextField();
        jLabel_UserAgentString = new javax.swing.JLabel();
        jTextField_UserAgentString = new javax.swing.JTextField();
        jLabel_Workstation = new javax.swing.JLabel();
        jTextField_WorkstationName = new javax.swing.JTextField();
        jButton_GlobalSettingSave = new javax.swing.JButton();
        jTextField_GlobalSettingID = new javax.swing.JTextField();
        jPanel_EntitySetting = new javax.swing.JPanel();
        jPanel_EntiySettingTop = new javax.swing.JPanel();
        Title_EntiySetting = new javax.swing.JLabel();
        TitleSeparator_EntiySetting = new javax.swing.JSeparator();
        jCheckBox_EnableEntity = new javax.swing.JCheckBox();
        jTextField_EntityID = new javax.swing.JTextField();
        jLabel_EntityName = new javax.swing.JLabel();
        jTextField_EntityName = new javax.swing.JTextField();
        NewEntity = new javax.swing.JButton();
        SaveEntity = new javax.swing.JButton();
        DeleteEntity = new javax.swing.JButton();
        jPanel_EntiySettingBottom = new javax.swing.JPanel();
        jScrollPane_EntiySetting = new javax.swing.JScrollPane();
        jTable_EntiySetting = new javax.swing.JTable();
        jPanel_PostContentPool = new javax.swing.JPanel();
        jPanel_PostContentPoolTop = new javax.swing.JPanel();
        Title_PostContentPool = new javax.swing.JLabel();
        TitleSeparator_PostContentPool = new javax.swing.JSeparator();
        jCheckBox_EnablePoolContent = new javax.swing.JCheckBox();
        jTextField_PoolContentID = new javax.swing.JTextField();
        jLabel_PoolContent = new javax.swing.JLabel();
        jTextField_PoolContent = new javax.swing.JTextField();
        NewPoolContent = new javax.swing.JButton();
        SavePoolContent = new javax.swing.JButton();
        DeletePoolContent = new javax.swing.JButton();
        jLabel_PoolPostEntity = new javax.swing.JLabel();
        jComboBox_PoolFirefoxProfile = new javax.swing.JComboBox<>();
        jPanel_PostContentPoolBottom = new javax.swing.JPanel();
        jScrollPane_PostContentPool = new javax.swing.JScrollPane();
        jTable_PostContentPool = new javax.swing.JTable();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("PostApp");
        setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N

        jTabbedPane_PostMachineApp.setPreferredSize(new java.awt.Dimension(800, 450));

        jPanel_Console.setPreferredSize(new java.awt.Dimension(795, 400));

        jScrollPane_Console.setPreferredSize(new java.awt.Dimension(146, 400));

        jTextArea_Console.setColumns(20);
        jTextArea_Console.setRows(5);
        jScrollPane_Console.setViewportView(jTextArea_Console);
        new PostMachineConsole(jTextArea_Console);

        jButtonClearConsole.setText("Clear All");
        jButtonClearConsole.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonClearConsoleActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel_ConsoleLayout = new javax.swing.GroupLayout(jPanel_Console);
        jPanel_Console.setLayout(jPanel_ConsoleLayout);
        jPanel_ConsoleLayout.setHorizontalGroup(
            jPanel_ConsoleLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane_Console, javax.swing.GroupLayout.DEFAULT_SIZE, 795, Short.MAX_VALUE)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel_ConsoleLayout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(jButtonClearConsole, javax.swing.GroupLayout.PREFERRED_SIZE, 118, javax.swing.GroupLayout.PREFERRED_SIZE))
        );
        jPanel_ConsoleLayout.setVerticalGroup(
            jPanel_ConsoleLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel_ConsoleLayout.createSequentialGroup()
                .addComponent(jScrollPane_Console, javax.swing.GroupLayout.PREFERRED_SIZE, 413, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jButtonClearConsole)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jTabbedPane_PostMachineApp.addTab("Console", jPanel_Console);

        jPanel_TaskManagement.setPreferredSize(new java.awt.Dimension(795, 500));
        jPanel_TaskManagement.setRequestFocusEnabled(false);

        jPanel_Top.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(0, 0, 0), 1, true));

        Title_TaskManagement.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        Title_TaskManagement.setForeground(new java.awt.Color(0, 0, 255));
        Title_TaskManagement.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        Title_TaskManagement.setText("Task Management");

        jCheckBox_EnableThread.setText("Thread ID:");
        jCheckBox_EnableThread.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jCheckBox_EnableThreadActionPerformed(evt);
            }
        });

        jTextField_ThreadID.setText("1");
        jTextField_ThreadID.setToolTipText("Thread ID must be unique");
        jTextField_ThreadID.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField_ThreadIDActionPerformed(evt);
            }
        });

        jLabel_Profile.setText("Firefox Profile:");

        jTextField_Profile.setText("default");
        jTextField_Profile.setToolTipText("Firefox Profile Name");
        jTextField_Profile.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField_ProfileActionPerformed(evt);
            }
        });

        jLabel_StartTime.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel_StartTime.setText("Start Time:");

        jTextField_StartTime.setColumns(19);
        jTextField_StartTime.setText("2016-01-01 00:00:00");
        jTextField_StartTime.setToolTipText("Task Start Time");

        jCheckBox_EnableStopTime.setText("StopTime:");

        jTextField_StopTime.setColumns(19);
        jTextField_StopTime.setText("2018-12-31 23:59:59");
        jTextField_StopTime.setToolTipText("Task Stop Time");
        jTextField_StopTime.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField_StopTimeActionPerformed(evt);
            }
        });

        jLabel_RefreshPostCount.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel_RefreshPostCount.setText("Refresh Post Count:");

        jTextField_RefreshPostCount.setText("100");
        jTextField_RefreshPostCount.setToolTipText("Refresh Post Count");
        jTextField_RefreshPostCount.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField_RefreshPostCountActionPerformed(evt);
            }
        });

        jLabel_PostNumber.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel_PostNumber.setText("Post Count:");

        jTextField_PostCount.setText("65535");
        jTextField_PostCount.setToolTipText("Post Count");
        jTextField_PostCount.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField_PostCountActionPerformed(evt);
            }
        });

        jLabel_FixedWaitTime.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel_FixedWaitTime.setText("Fixed Wait Time:");

        jTextField_FixedWaitTime.setText("11");
        jTextField_FixedWaitTime.setToolTipText("Post Interval Time,unit is Second");
        jTextField_FixedWaitTime.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField_FixedWaitTimeActionPerformed(evt);
            }
        });

        jLabel_RandomWaitTime.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel_RandomWaitTime.setText("Random Wait Time:");

        jTextField_RandomWaitTime.setText("5");
        jTextField_RandomWaitTime.setToolTipText("Random Wait Time,unit is Second");
        jTextField_RandomWaitTime.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField_RandomWaitTimeActionPerformed(evt);
            }
        });

        jLabel_PostUrl.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel_PostUrl.setText("Post Url:");

        jTextField_PostUrl.setToolTipText("Post URL");
        jTextField_PostUrl.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField_PostUrlActionPerformed(evt);
            }
        });

        jLabel_PostContent.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel_PostContent.setText("Post Content:");

        Save.setText("Save");
        Save.setToolTipText("Save a new thread or a edited thread");
        Save.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                SaveActionPerformed(evt);
            }
        });

        Delete.setText("Delete");
        Delete.setToolTipText("Delete a seleted thread");
        Delete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                DeleteActionPerformed(evt);
            }
        });

        New.setText("New");
        New.setToolTipText("Create a new thread form");
        New.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                NewActionPerformed(evt);
            }
        });

        Run.setText("RunAll");
        Run.setToolTipText("Run all of the enable threads");
        Run.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                RunActionPerformed(evt);
            }
        });

        RunS.setText("RunSelected");
        RunS.setToolTipText("Run the Selected thread");
        RunS.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                RunSActionPerformed(evt);
            }
        });

        jLabel_PostEntity.setText("PostEntity:");

        List<Entity> Entitys = new ArrayList<Entity>();
        Entitys=EntityDAO.getAllEntity();
        final int size=Entitys.size();
        Entity[] EntityArray=(Entity[])Entitys.toArray(new Entity[size]);
        String[] EntityName=new String[size];
        for(int i=0;i<size;i++)
        {
            EntityName[i]=EntityArray[i].getEntityName();
        }
        jComboBox_PostEntity.setModel(new javax.swing.DefaultComboBoxModel<>(EntityName));

        jTextField_RestWaitTime.setToolTipText("Rest Wait Time,unit is Second");

        jLabel_RestWaitTime.setText("Rest Wait Time:");

        jTextField_RestWaitPostCount.setToolTipText("Rest Wait Post Count");

        jLabel_RestWaitPostCount.setText("/");

        jComboBox_PostContent.setEditable(true);
        jComboBox_PostContent.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "[Pool]", "[TextFile]" }));
        jComboBox_PostContent.setToolTipText("Post Content");

        javax.swing.GroupLayout jPanel_TopLayout = new javax.swing.GroupLayout(jPanel_Top);
        jPanel_Top.setLayout(jPanel_TopLayout);
        jPanel_TopLayout.setHorizontalGroup(
            jPanel_TopLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel_TopLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel_TopLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel_TopLayout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(New)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(Save)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(Delete)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(RunS)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(Run))
                    .addGroup(jPanel_TopLayout.createSequentialGroup()
                        .addGroup(jPanel_TopLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel_TopLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                .addComponent(jLabel_PostNumber, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jLabel_PostContent, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jLabel_StartTime, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jCheckBox_EnableThread, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                            .addComponent(jLabel_PostUrl, javax.swing.GroupLayout.PREFERRED_SIZE, 79, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel_TopLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel_TopLayout.createSequentialGroup()
                                .addGroup(jPanel_TopLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                    .addComponent(jTextField_PostUrl, javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel_TopLayout.createSequentialGroup()
                                        .addGroup(jPanel_TopLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                            .addComponent(jTextField_PostCount)
                                            .addComponent(jTextField_ThreadID)
                                            .addComponent(jTextField_StartTime, javax.swing.GroupLayout.DEFAULT_SIZE, 127, Short.MAX_VALUE))
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addGroup(jPanel_TopLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                            .addComponent(jLabel_FixedWaitTime, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                            .addComponent(jCheckBox_EnableStopTime, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                            .addComponent(jLabel_Profile, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addGroup(jPanel_TopLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                            .addComponent(jTextField_Profile)
                                            .addComponent(jTextField_FixedWaitTime, javax.swing.GroupLayout.Alignment.TRAILING)
                                            .addComponent(jTextField_StopTime, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 129, Short.MAX_VALUE))))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(jPanel_TopLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addGroup(jPanel_TopLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(jLabel_RefreshPostCount, javax.swing.GroupLayout.PREFERRED_SIZE, 138, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(jLabel_PostEntity, javax.swing.GroupLayout.Alignment.TRAILING)
                                        .addComponent(jLabel_RandomWaitTime, javax.swing.GroupLayout.Alignment.TRAILING))
                                    .addComponent(jLabel_RestWaitTime))
                                .addGap(10, 10, 10)
                                .addGroup(jPanel_TopLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(jTextField_RandomWaitTime)
                                    .addComponent(jTextField_RefreshPostCount, javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jComboBox_PostEntity, javax.swing.GroupLayout.Alignment.LEADING, 0, 134, Short.MAX_VALUE)
                                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel_TopLayout.createSequentialGroup()
                                        .addComponent(jTextField_RestWaitTime)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(jLabel_RestWaitPostCount)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(jTextField_RestWaitPostCount, javax.swing.GroupLayout.PREFERRED_SIZE, 46, javax.swing.GroupLayout.PREFERRED_SIZE))))
                            .addComponent(jComboBox_PostContent, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                    .addComponent(TitleSeparator_TaskManagement, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(Title_TaskManagement, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        jPanel_TopLayout.setVerticalGroup(
            jPanel_TopLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel_TopLayout.createSequentialGroup()
                .addComponent(Title_TaskManagement, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(TitleSeparator_TaskManagement, javax.swing.GroupLayout.PREFERRED_SIZE, 2, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel_TopLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel_Profile)
                    .addComponent(jTextField_Profile, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jTextField_ThreadID, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jCheckBox_EnableThread)
                    .addComponent(jLabel_PostEntity)
                    .addComponent(jComboBox_PostEntity, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel_TopLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel_TopLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jTextField_StartTime, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel_StartTime))
                    .addGroup(jPanel_TopLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jCheckBox_EnableStopTime)
                        .addComponent(jTextField_StopTime, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel_RefreshPostCount)
                        .addComponent(jTextField_RefreshPostCount, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(4, 4, 4)
                .addGroup(jPanel_TopLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel_PostNumber)
                    .addComponent(jTextField_PostCount, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel_FixedWaitTime)
                    .addComponent(jTextField_FixedWaitTime, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel_RandomWaitTime)
                    .addComponent(jTextField_RandomWaitTime, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel_TopLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel_PostUrl)
                    .addComponent(jTextField_PostUrl, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jTextField_RestWaitTime, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel_RestWaitTime)
                    .addComponent(jTextField_RestWaitPostCount, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel_RestWaitPostCount))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel_TopLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel_PostContent)
                    .addComponent(jComboBox_PostContent, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel_TopLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(Delete)
                    .addComponent(Save)
                    .addComponent(New)
                    .addComponent(Run)
                    .addComponent(RunS))
                .addContainerGap())
        );

        jPanel_Bottom.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(0, 0, 0), 1, true));
        jPanel_Bottom.setPreferredSize(new java.awt.Dimension(454, 250));

        jScrollPane.setPreferredSize(new java.awt.Dimension(452, 250));

        jTable.setAutoCreateRowSorter(true);
        jTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null}
            },
            new String [] {
                "Enable", "ID", "ProfileName", "PostEntity", "PostCount", "FixedWait", "RandomWait", "PostContent"
            }
        ));
        jTable.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTableMouseClicked(evt);
            }
        });
        jTable.getColumnModel().getColumn(0).setPreferredWidth(10);
        jTable.getColumnModel().getColumn(1).setPreferredWidth(10);
        jTable.getColumnModel().getColumn(2).setPreferredWidth(35);
        jTable.getColumnModel().getColumn(3).setPreferredWidth(20);
        jTable.getColumnModel().getColumn(4).setPreferredWidth(25);
        jTable.getColumnModel().getColumn(5).setPreferredWidth(20);
        jTable.getColumnModel().getColumn(6).setPreferredWidth(40);
        jTable.getColumnModel().getColumn(7).setPreferredWidth(260);
        jScrollPane.setViewportView(jTable);

        javax.swing.GroupLayout jPanel_BottomLayout = new javax.swing.GroupLayout(jPanel_Bottom);
        jPanel_Bottom.setLayout(jPanel_BottomLayout);
        jPanel_BottomLayout.setHorizontalGroup(
            jPanel_BottomLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane, javax.swing.GroupLayout.DEFAULT_SIZE, 773, Short.MAX_VALUE)
        );
        jPanel_BottomLayout.setVerticalGroup(
            jPanel_BottomLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane, javax.swing.GroupLayout.PREFERRED_SIZE, 188, javax.swing.GroupLayout.PREFERRED_SIZE)
        );

        javax.swing.GroupLayout jPanel_TaskManagementLayout = new javax.swing.GroupLayout(jPanel_TaskManagement);
        jPanel_TaskManagement.setLayout(jPanel_TaskManagementLayout);
        jPanel_TaskManagementLayout.setHorizontalGroup(
            jPanel_TaskManagementLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel_TaskManagementLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel_TaskManagementLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel_Top, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel_Bottom, javax.swing.GroupLayout.DEFAULT_SIZE, 775, Short.MAX_VALUE))
                .addContainerGap())
        );
        jPanel_TaskManagementLayout.setVerticalGroup(
            jPanel_TaskManagementLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel_TaskManagementLayout.createSequentialGroup()
                .addComponent(jPanel_Top, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel_Bottom, javax.swing.GroupLayout.PREFERRED_SIZE, 190, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(45, Short.MAX_VALUE))
        );

        jTabbedPane_PostMachineApp.addTab("Task Management", jPanel_TaskManagement);

        javax.swing.GroupLayout jPanel_EntityManagementLayout = new javax.swing.GroupLayout(jPanel_EntityManagement);
        jPanel_EntityManagement.setLayout(jPanel_EntityManagementLayout);
        jPanel_EntityManagementLayout.setHorizontalGroup(
            jPanel_EntityManagementLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 795, Short.MAX_VALUE)
        );
        jPanel_EntityManagementLayout.setVerticalGroup(
            jPanel_EntityManagementLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 452, Short.MAX_VALUE)
        );

        jTabbedPane_PostMachineApp.addTab("Entity Management", jPanel_EntityManagement);

        jTabbedPane_SystemSettings.setTabPlacement(javax.swing.JTabbedPane.LEFT);
        jTabbedPane_SystemSettings.setPreferredSize(new java.awt.Dimension(795, 450));

        jPanel_GlobalSetting.setPreferredSize(new java.awt.Dimension(660, 400));

        Title_GlobalParametersSetting.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        Title_GlobalParametersSetting.setForeground(new java.awt.Color(0, 0, 255));
        Title_GlobalParametersSetting.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        Title_GlobalParametersSetting.setText("Global Parameters Setting");
        Title_GlobalParametersSetting.setToolTipText("");
        Title_GlobalParametersSetting.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);

        jLabel_FirefoxInstallationPath.setText("Firefox Installation Path:");

        jTextField_FirefoxInstallationPath.setText("D:\\\\Program Files\\\\Mozilla Firefox\\\\firefox.exe");
        jTextField_FirefoxInstallationPath.setToolTipText("Local firefox installation path,eg. D:\\\\Program Files\\\\Mozilla Firefox\\\\firefox.exe");

        jLabel_UserAgentString.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel_UserAgentString.setText("User Agent String:");

        jTextField_UserAgentString.setText("Mozilla/5.0 (compatible; MSIE 9.0; Windows Phone OS 7.5; Trident/5.0; IEMobile/9.0)");
        jTextField_UserAgentString.setToolTipText("Local firefox installation path,eg. D:\\\\Program Files\\\\Mozilla Firefox\\\\firefox.exe");

        jLabel_Workstation.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel_Workstation.setText("Workstation Name:");

        jTextField_WorkstationName.setText("ComputerName");
        jTextField_WorkstationName.setToolTipText("Local firefox installation path,eg. D:\\\\Program Files\\\\Mozilla Firefox\\\\firefox.exe");

        jButton_GlobalSettingSave.setText("Save");
        jButton_GlobalSettingSave.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton_GlobalSettingSaveActionPerformed(evt);
            }
        });

        jTextField_GlobalSettingID.setEditable(false);
        jTextField_GlobalSettingID.setVisible(false);
        jTextField_GlobalSettingID.setText("1");

        javax.swing.GroupLayout jPanel_GlobalSettingLayout = new javax.swing.GroupLayout(jPanel_GlobalSetting);
        jPanel_GlobalSetting.setLayout(jPanel_GlobalSettingLayout);
        jPanel_GlobalSettingLayout.setHorizontalGroup(
            jPanel_GlobalSettingLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel_GlobalSettingLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel_GlobalSettingLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel_GlobalSettingLayout.createSequentialGroup()
                        .addGroup(jPanel_GlobalSettingLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel_GlobalSettingLayout.createSequentialGroup()
                                .addComponent(jTextField_GlobalSettingID, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jLabel_Workstation, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                            .addComponent(jLabel_UserAgentString, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel_FirefoxInstallationPath, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel_GlobalSettingLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel_GlobalSettingLayout.createSequentialGroup()
                                .addGap(0, 0, Short.MAX_VALUE)
                                .addComponent(jButton_GlobalSettingSave))
                            .addComponent(jTextField_FirefoxInstallationPath)
                            .addComponent(jTextField_UserAgentString, javax.swing.GroupLayout.DEFAULT_SIZE, 492, Short.MAX_VALUE)
                            .addComponent(jTextField_WorkstationName)))
                    .addComponent(Title_GlobalParametersSetting, javax.swing.GroupLayout.DEFAULT_SIZE, 652, Short.MAX_VALUE)
                    .addComponent(TitleSeparator_GlobalParametersSetting))
                .addContainerGap())
        );
        jPanel_GlobalSettingLayout.setVerticalGroup(
            jPanel_GlobalSettingLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel_GlobalSettingLayout.createSequentialGroup()
                .addComponent(Title_GlobalParametersSetting)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(TitleSeparator_GlobalParametersSetting, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel_GlobalSettingLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel_FirefoxInstallationPath)
                    .addComponent(jTextField_FirefoxInstallationPath))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel_GlobalSettingLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel_UserAgentString)
                    .addComponent(jTextField_UserAgentString))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel_GlobalSettingLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel_Workstation)
                    .addComponent(jTextField_WorkstationName)
                    .addComponent(jTextField_GlobalSettingID, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jButton_GlobalSettingSave)
                .addContainerGap())
        );

        jTabbedPane_SystemSettings.addTab("Global Setting", jPanel_GlobalSetting);

        jPanel_EntitySetting.setPreferredSize(new java.awt.Dimension(660, 400));

        jPanel_EntiySettingTop.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(0, 0, 0), 1, true));

        Title_EntiySetting.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        Title_EntiySetting.setForeground(new java.awt.Color(0, 0, 255));
        Title_EntiySetting.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        Title_EntiySetting.setText("Entity Setting");

        jCheckBox_EnableEntity.setText("Entity ID:");
        jCheckBox_EnableEntity.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jCheckBox_EnableEntityActionPerformed(evt);
            }
        });

        jTextField_EntityID.setText("1");
        jTextField_EntityID.setToolTipText("Thread ID must be unique");
        jTextField_EntityID.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField_EntityIDActionPerformed(evt);
            }
        });

        jLabel_EntityName.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel_EntityName.setText("Entity Name:");

        jTextField_EntityName.setToolTipText("Post URL");
        jTextField_EntityName.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField_EntityNameActionPerformed(evt);
            }
        });

        NewEntity.setText("New");
        NewEntity.setToolTipText("Create a new thread form");
        NewEntity.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                NewEntityActionPerformed(evt);
            }
        });

        SaveEntity.setText("Save");
        SaveEntity.setToolTipText("Save a new thread or a edited thread");
        SaveEntity.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                SaveEntityActionPerformed(evt);
            }
        });

        DeleteEntity.setText("Delete");
        DeleteEntity.setToolTipText("Delete a seleted thread");
        DeleteEntity.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                DeleteEntityActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel_EntiySettingTopLayout = new javax.swing.GroupLayout(jPanel_EntiySettingTop);
        jPanel_EntiySettingTop.setLayout(jPanel_EntiySettingTopLayout);
        jPanel_EntiySettingTopLayout.setHorizontalGroup(
            jPanel_EntiySettingTopLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel_EntiySettingTopLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel_EntiySettingTopLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel_EntiySettingTopLayout.createSequentialGroup()
                        .addComponent(jCheckBox_EnableEntity)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jTextField_EntityID, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel_EntityName)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jTextField_EntityName))
                    .addComponent(TitleSeparator_EntiySetting, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(Title_EntiySetting, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel_EntiySettingTopLayout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(NewEntity)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(SaveEntity)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(DeleteEntity)))
                .addContainerGap())
        );
        jPanel_EntiySettingTopLayout.setVerticalGroup(
            jPanel_EntiySettingTopLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel_EntiySettingTopLayout.createSequentialGroup()
                .addComponent(Title_EntiySetting, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(TitleSeparator_EntiySetting, javax.swing.GroupLayout.PREFERRED_SIZE, 2, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel_EntiySettingTopLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel_EntiySettingTopLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jTextField_EntityID, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jCheckBox_EnableEntity)
                        .addComponent(jLabel_EntityName))
                    .addComponent(jTextField_EntityName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel_EntiySettingTopLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(DeleteEntity)
                    .addComponent(SaveEntity)
                    .addComponent(NewEntity))
                .addContainerGap())
        );

        jPanel_EntiySettingBottom.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(0, 0, 0), 1, true));
        jPanel_EntiySettingBottom.setPreferredSize(new java.awt.Dimension(454, 250));

        jScrollPane_EntiySetting.setPreferredSize(new java.awt.Dimension(452, 250));

        jTable_EntiySetting.setAutoCreateRowSorter(true);
        jTable_EntiySetting.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null}
            },
            new String [] {
                "Enable", "Entity ID", "Entity Name"
            }
        ));
        jTable_EntiySetting.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTable_EntiySettingMouseClicked(evt);
            }
        });
        jTable_EntiySetting.getColumnModel().getColumn(0).setPreferredWidth(20);
        jTable_EntiySetting.getColumnModel().getColumn(1).setPreferredWidth(20);
        jTable_EntiySetting.getColumnModel().getColumn(2).setPreferredWidth(400);
        jScrollPane_EntiySetting.setViewportView(jTable_EntiySetting);

        javax.swing.GroupLayout jPanel_EntiySettingBottomLayout = new javax.swing.GroupLayout(jPanel_EntiySettingBottom);
        jPanel_EntiySettingBottom.setLayout(jPanel_EntiySettingBottomLayout);
        jPanel_EntiySettingBottomLayout.setHorizontalGroup(
            jPanel_EntiySettingBottomLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane_EntiySetting, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 670, Short.MAX_VALUE)
        );
        jPanel_EntiySettingBottomLayout.setVerticalGroup(
            jPanel_EntiySettingBottomLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane_EntiySetting, javax.swing.GroupLayout.DEFAULT_SIZE, 337, Short.MAX_VALUE)
        );

        javax.swing.GroupLayout jPanel_EntitySettingLayout = new javax.swing.GroupLayout(jPanel_EntitySetting);
        jPanel_EntitySetting.setLayout(jPanel_EntitySettingLayout);
        jPanel_EntitySettingLayout.setHorizontalGroup(
            jPanel_EntitySettingLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel_EntiySettingTop, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(jPanel_EntiySettingBottom, javax.swing.GroupLayout.DEFAULT_SIZE, 672, Short.MAX_VALUE)
        );
        jPanel_EntitySettingLayout.setVerticalGroup(
            jPanel_EntitySettingLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel_EntitySettingLayout.createSequentialGroup()
                .addComponent(jPanel_EntiySettingTop, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel_EntiySettingBottom, javax.swing.GroupLayout.DEFAULT_SIZE, 339, Short.MAX_VALUE)
                .addContainerGap())
        );

        jTabbedPane_SystemSettings.addTab("Entity Setting", jPanel_EntitySetting);

        jPanel_PostContentPool.setPreferredSize(new java.awt.Dimension(660, 400));

        jPanel_PostContentPoolTop.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(0, 0, 0), 1, true));

        Title_PostContentPool.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        Title_PostContentPool.setForeground(new java.awt.Color(0, 0, 255));
        Title_PostContentPool.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        Title_PostContentPool.setText("Post Content Pool");

        jCheckBox_EnablePoolContent.setText("Content ID:");
        jCheckBox_EnablePoolContent.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jCheckBox_EnablePoolContentActionPerformed(evt);
            }
        });

        jTextField_PoolContentID.setText("1");
        jTextField_PoolContentID.setToolTipText("Thread ID must be unique");
        jTextField_PoolContentID.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField_PoolContentIDActionPerformed(evt);
            }
        });

        jLabel_PoolContent.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel_PoolContent.setText("Post Content:");

        jTextField_PoolContent.setToolTipText("Post URL");
        jTextField_PoolContent.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField_PoolContentActionPerformed(evt);
            }
        });

        NewPoolContent.setText("New");
        NewPoolContent.setToolTipText("Create a new thread form");
        NewPoolContent.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                NewPoolContentActionPerformed(evt);
            }
        });

        SavePoolContent.setText("Save");
        SavePoolContent.setToolTipText("Save a new thread or a edited thread");
        SavePoolContent.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                SavePoolContentActionPerformed(evt);
            }
        });

        DeletePoolContent.setText("Delete");
        DeletePoolContent.setToolTipText("Delete a seleted thread");
        DeletePoolContent.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                DeletePoolContentActionPerformed(evt);
            }
        });

        jLabel_PoolPostEntity.setText("Pool Firefox Profile:");

        List<ForumPost> ForumPosts = new ArrayList<ForumPost>();
        ForumPosts=TaskManagementDAO.getAllForumPost();
        final int ForumPostsSize=ForumPosts.size();
        ForumPost[] ForumPostArray=(ForumPost[])ForumPosts.toArray(new ForumPost[ForumPostsSize]);
        String[] id=new String[ForumPostsSize];
        for(int i=0;i<ForumPostsSize;i++)
        {
            id[i]=ForumPostArray[i].getProfile();
        }
        jComboBox_PoolFirefoxProfile.setModel(new javax.swing.DefaultComboBoxModel<>(id));

        javax.swing.GroupLayout jPanel_PostContentPoolTopLayout = new javax.swing.GroupLayout(jPanel_PostContentPoolTop);
        jPanel_PostContentPoolTop.setLayout(jPanel_PostContentPoolTopLayout);
        jPanel_PostContentPoolTopLayout.setHorizontalGroup(
            jPanel_PostContentPoolTopLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel_PostContentPoolTopLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel_PostContentPoolTopLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(TitleSeparator_PostContentPool, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(Title_PostContentPool, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel_PostContentPoolTopLayout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(NewPoolContent)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(SavePoolContent)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(DeletePoolContent))
                    .addGroup(jPanel_PostContentPoolTopLayout.createSequentialGroup()
                        .addGroup(jPanel_PostContentPoolTopLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jCheckBox_EnablePoolContent)
                            .addComponent(jLabel_PoolContent))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel_PostContentPoolTopLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel_PostContentPoolTopLayout.createSequentialGroup()
                                .addComponent(jTextField_PoolContentID, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jLabel_PoolPostEntity)
                                .addGap(10, 10, 10)
                                .addComponent(jComboBox_PoolFirefoxProfile, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(jTextField_PoolContent))))
                .addContainerGap())
        );
        jPanel_PostContentPoolTopLayout.setVerticalGroup(
            jPanel_PostContentPoolTopLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel_PostContentPoolTopLayout.createSequentialGroup()
                .addComponent(Title_PostContentPool)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(TitleSeparator_PostContentPool, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel_PostContentPoolTopLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jCheckBox_EnablePoolContent)
                    .addComponent(jTextField_PoolContentID, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel_PoolPostEntity)
                    .addComponent(jComboBox_PoolFirefoxProfile, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel_PostContentPoolTopLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel_PoolContent)
                    .addComponent(jTextField_PoolContent, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel_PostContentPoolTopLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(DeletePoolContent)
                    .addComponent(SavePoolContent)
                    .addComponent(NewPoolContent))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanel_PostContentPoolBottom.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(0, 0, 0), 1, true));
        jPanel_PostContentPoolBottom.setPreferredSize(new java.awt.Dimension(454, 250));

        jScrollPane_PostContentPool.setPreferredSize(new java.awt.Dimension(452, 250));

        jTable_PostContentPool.setAutoCreateRowSorter(true);
        jTable_PostContentPool.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Enable", "Content ID", "Firefox Profile", "Post Content"
            }
        ));
        jTable_PostContentPool.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTable_PostContentPoolMouseClicked(evt);
            }
        });
        jTable_PostContentPool.getColumnModel().getColumn(0).setPreferredWidth(20);
        jTable_PostContentPool.getColumnModel().getColumn(1).setPreferredWidth(20);
        jTable_PostContentPool.getColumnModel().getColumn(2).setPreferredWidth(50);
        jTable_PostContentPool.getColumnModel().getColumn(3).setPreferredWidth(350);
        jScrollPane_PostContentPool.setViewportView(jTable_PostContentPool);

        javax.swing.GroupLayout jPanel_PostContentPoolBottomLayout = new javax.swing.GroupLayout(jPanel_PostContentPoolBottom);
        jPanel_PostContentPoolBottom.setLayout(jPanel_PostContentPoolBottomLayout);
        jPanel_PostContentPoolBottomLayout.setHorizontalGroup(
            jPanel_PostContentPoolBottomLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane_PostContentPool, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 670, Short.MAX_VALUE)
        );
        jPanel_PostContentPoolBottomLayout.setVerticalGroup(
            jPanel_PostContentPoolBottomLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane_PostContentPool, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 307, Short.MAX_VALUE)
        );

        javax.swing.GroupLayout jPanel_PostContentPoolLayout = new javax.swing.GroupLayout(jPanel_PostContentPool);
        jPanel_PostContentPool.setLayout(jPanel_PostContentPoolLayout);
        jPanel_PostContentPoolLayout.setHorizontalGroup(
            jPanel_PostContentPoolLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel_PostContentPoolTop, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(jPanel_PostContentPoolBottom, javax.swing.GroupLayout.DEFAULT_SIZE, 672, Short.MAX_VALUE)
        );
        jPanel_PostContentPoolLayout.setVerticalGroup(
            jPanel_PostContentPoolLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel_PostContentPoolLayout.createSequentialGroup()
                .addComponent(jPanel_PostContentPoolTop, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel_PostContentPoolBottom, javax.swing.GroupLayout.DEFAULT_SIZE, 309, Short.MAX_VALUE)
                .addContainerGap())
        );

        jTabbedPane_SystemSettings.addTab("Post Content Pool", jPanel_PostContentPool);

        jTabbedPane_PostMachineApp.addTab("System Settings", jTabbedPane_SystemSettings);

        jTabbedPane_PostMachineApp.setSelectedIndex(1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jTabbedPane_PostMachineApp, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jTabbedPane_PostMachineApp, javax.swing.GroupLayout.DEFAULT_SIZE, 481, Short.MAX_VALUE)
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void jTextField_RandomWaitTimeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextField_RandomWaitTimeActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextField_RandomWaitTimeActionPerformed

    private void jTextField_FixedWaitTimeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextField_FixedWaitTimeActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextField_FixedWaitTimeActionPerformed

    private void jTextField_PostCountActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextField_PostCountActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextField_PostCountActionPerformed

    private void jTextField_StopTimeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextField_StopTimeActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextField_StopTimeActionPerformed

    private void SaveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_SaveActionPerformed
        try {
            // TODO add your handling code here:
            EnableThread = this.jCheckBox_EnableThread.isSelected();
            ThreadID = Integer.parseInt(this.jTextField_ThreadID.getText());
            FirefoxPath = this.jTextField_FirefoxInstallationPath.getText();
            Profile = this.jTextField_Profile.getText();
            PostEntity = (String) this.jComboBox_PostEntity.getSelectedItem();
            StartTimeString = this.jTextField_StartTime.getText();
            SimpleDateFormat format = new SimpleDateFormat("yyyy-MM-dd HH:mm:ss");
            Date startDate = format.parse(StartTimeString);
            StartTime = startDate.getTime();
            EnableStopTime = this.jCheckBox_EnableStopTime.isSelected();
            StopTimeString = this.jTextField_StopTime.getText();
            Date stopDate = format.parse(StopTimeString);
            StopTime = stopDate.getTime();
            RefreshPostCount = Integer.parseInt(this.jTextField_RefreshPostCount.getText());
            PostCount = Long.parseLong(this.jTextField_PostCount.getText());
            FixedWaitTime = Integer.parseInt(this.jTextField_FixedWaitTime.getText());
            RandomWaitTime = Integer.parseInt(this.jTextField_RandomWaitTime.getText());
            RestWaitTime = Integer.parseInt(this.jTextField_RestWaitTime.getText());
            RestWaitPostCount = Integer.parseInt(this.jTextField_RestWaitPostCount.getText());
            PostUrl = this.jTextField_PostUrl.getText();
            PostContent = (String)this.jComboBox_PostContent.getEditor().getItem();
            ForumPost ForumPost = ForumPostFactory.CreateForumPost(EnableThread, ThreadID, FirefoxPath, Profile, PostEntity, StartTime, EnableStopTime, StopTime, RefreshPostCount, PostCount, FixedWaitTime, RandomWaitTime, RestWaitTime, RestWaitPostCount, PostUrl, PostContent);
            if (TaskManagementDAO.ThreadIDisExisting(ForumPost)) {
                TaskManagementDAO.update(ForumPost);
            } else {
                TaskManagementDAO.add(ForumPost);
            }
        } catch (ParseException ex) {
            Logger.getLogger(PostMachineApp.class.getName()).log(Level.SEVERE, null, ex);
        }
        System.out.println("Save successfully！");
        JOptionPane.showMessageDialog(null, "Save successfully！", "Save", JOptionPane.INFORMATION_MESSAGE);
        fillTable();
    }//GEN-LAST:event_SaveActionPerformed

    private void fillTable() {
        TaskManagementDAO.getAllForumPost();
        DefaultTableModel tableModel = (DefaultTableModel) jTable.getModel();
        tableModel.setRowCount(0);
        // 填充数据
        for (ForumPost ForumPost : TaskManagementDAO.getAllForumPost()) {
            String[] arr = new String[8];
            arr[0] = ForumPost.getEnableThread().toString();
            arr[1] = ForumPost.getThreadID().toString();
            arr[2] = ForumPost.getProfile();
            arr[3] = ForumPost.getPostEntity();
            arr[4] = Long.toString(ForumPost.getPostCount());
            arr[5] = Integer.toString(ForumPost.getFixedWaitTime());
            arr[6] = Integer.toString(ForumPost.getRandomWaitTime());
            arr[7] = ForumPost.getPostContent();;

            // 添加数据到表格
            tableModel.addRow(arr);
        }

        // 更新表格
        jTable.invalidate();
    }

    private void fillEntityTable() {
        EntityDAO.getAllEntity();
        DefaultTableModel tableModel = (DefaultTableModel) jTable_EntiySetting.getModel();
        tableModel.setRowCount(0);
        // 填充数据
        for (Entity Entity : EntityDAO.getAllEntity()) {
            String[] arr = new String[3];
            arr[0] = Entity.getEnableEntity().toString();
            arr[1] = Entity.getEntityID().toString();
            arr[2] = Entity.getEntityName();
            // 添加数据到表格
            tableModel.addRow(arr);
        }

        // 更新表格
        jTable_EntiySetting.invalidate();
    }

    private void fillPostContentPoolTable() {
        PostContentPoolDAO.getAllPostContent();
        DefaultTableModel tableModel = (DefaultTableModel) jTable_PostContentPool.getModel();
        tableModel.setRowCount(0);
        // 填充数据
        for (PostContentEntity PostContentEntity : PostContentPoolDAO.getAllPostContent()) {
            String[] arr = new String[4];
            arr[0] = PostContentEntity.getEnablePoolContent().toString();
            arr[1] = PostContentEntity.getPoolContentID().toString();
            arr[2] = PostContentEntity.getPoolFirefoxProfile();
            arr[3] = PostContentEntity.getPoolContent();
            // 添加数据到表格
            tableModel.addRow(arr);
        }

        // 更新表格
        jTable_EntiySetting.invalidate();
    }

    private void jCheckBox_EnableThreadActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCheckBox_EnableThreadActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jCheckBox_EnableThreadActionPerformed

    private void jTextField_RefreshPostCountActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextField_RefreshPostCountActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextField_RefreshPostCountActionPerformed

    private void jTextField_PostUrlActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextField_PostUrlActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextField_PostUrlActionPerformed

    private void jTextField_ThreadIDActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextField_ThreadIDActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextField_ThreadIDActionPerformed

    private void DeleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_DeleteActionPerformed
        // TODO add your handling code here:
        int YesOrNo = JOptionPane.showConfirmDialog(null, "Are you sure to delete?", "Delete", JOptionPane.YES_NO_OPTION);//返回的是按钮的index  i=0或者1  
        if (YesOrNo == 0) {
            String id = this.jTextField_ThreadID.getText();
            TaskManagementDAO.deleteById(id);
            System.out.println("Delete successfully！");
            fillTable();
            ForumPost ForumPost = TaskManagementDAO.getForumPostByID(String.valueOf(1));
            if (ForumPost != null) {
                fillForm(ForumPost);
            }
        }
    }//GEN-LAST:event_DeleteActionPerformed

    private void jTableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTableMouseClicked
        // TODO add your handling code here:
        int selectRows = jTable.getSelectedRows().length;// 取得用户所选行的行数
        DefaultTableModel tableModel = (DefaultTableModel) jTable.getModel();

        if (selectRows == 1) {
            int selectedRowIndex = jTable.getSelectedRow(); // 取得用户所选单行 
            ThreadID = Integer.parseInt(tableModel.getValueAt(selectedRowIndex, 1).toString());
        }
        ForumPost ForumPost = TaskManagementDAO.getForumPostByID(ThreadID.toString());
        if (ForumPost != null) {
            fillForm(ForumPost);
        }
    }//GEN-LAST:event_jTableMouseClicked

    private void NewActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_NewActionPerformed
        // TODO add your handling code here:
        this.jCheckBox_EnableThread.setSelected(true);
        this.jTextField_ThreadID.setText(Integer.toString(TaskManagementDAO.getMaxId() + 1));
        //this.jTextField_FirefoxInstallationPath.setText("default");
        this.jTextField_Profile.setText("default");
        this.jComboBox_PostEntity.setSelectedItem("Vivo");
        this.jTextField_StartTime.setText("2016-01-01 00:00:00");
        this.jCheckBox_EnableStopTime.setSelected(false);
        this.jTextField_StopTime.setText("2018-12-31 23:59:59");
        this.jTextField_RefreshPostCount.setText("200");
        this.jTextField_PostCount.setText("65535");
        this.jTextField_FixedWaitTime.setText("11");
        this.jTextField_RandomWaitTime.setText("30");
        this.jTextField_RestWaitTime.setText("0");
        this.jTextField_RestWaitPostCount.setText("0");
        this.jTextField_PostUrl.setText("");
        this.jComboBox_PostContent.getEditor().setItem("");
    }//GEN-LAST:event_NewActionPerformed

    private void RunActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_RunActionPerformed
        // TODO add your handling code here:
        int YesOrNo = JOptionPane.showConfirmDialog(null, "Are you sure to run all items?", "Run All", JOptionPane.YES_NO_OPTION);//返回的是按钮的index  i=0或者1  
        if (YesOrNo == 0) {
            List<ForumPost> ForumPosts = TaskManagementDAO.getRunForumPost();
            RunPost.RunPost(ForumPosts);
        }
    }//GEN-LAST:event_RunActionPerformed

    private void jTextField_ProfileActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextField_ProfileActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextField_ProfileActionPerformed

    private void RunSActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_RunSActionPerformed
        // TODO add your handling code here:
        int YesOrNo = JOptionPane.showConfirmDialog(null, "Are you sure to run the seleted item?", "Run Selected", JOptionPane.YES_NO_OPTION);//返回的是按钮的index  i=0或者1  
        if (YesOrNo == 0) {
            String id = this.jTextField_ThreadID.getText();
            ForumPost ForumPost = TaskManagementDAO.getForumPostByID(id);
            List<ForumPost> ForumPosts = new ArrayList<ForumPost>();
            ForumPosts.add(ForumPost);
            RunPost.RunPost(ForumPosts);
        }
    }//GEN-LAST:event_RunSActionPerformed

    private void jButtonClearConsoleActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonClearConsoleActionPerformed
        // TODO add your handling code here:
        this.jTextArea_Console.setText("");
    }//GEN-LAST:event_jButtonClearConsoleActionPerformed

    private void jButton_GlobalSettingSaveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton_GlobalSettingSaveActionPerformed
        // TODO add your handling code here:
        FirefoxInstallationPath = this.jTextField_FirefoxInstallationPath.getText();
        UserAgentString = this.jTextField_UserAgentString.getText();
        WorkstationName = this.jTextField_WorkstationName.getText();
        GlobalSettingID = this.jTextField_GlobalSettingID.getText();
        GlobalSetting GlobalSetting = new GlobalSetting(GlobalSettingID, FirefoxInstallationPath, UserAgentString, WorkstationName);
        if (GlobalSettingDAO.GlobalSettingIDisExisting(GlobalSetting)) {
            GlobalSettingDAO.update(GlobalSetting);
        } else {
            GlobalSettingDAO.add(GlobalSetting);
        }
        System.out.println("Save successfully！");
        JOptionPane.showMessageDialog(null, "Save successfully！", "Save", JOptionPane.INFORMATION_MESSAGE);
    }//GEN-LAST:event_jButton_GlobalSettingSaveActionPerformed

    private void NewEntityActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_NewEntityActionPerformed
        // TODO add your handling code here:
        this.jCheckBox_EnableEntity.setSelected(true);
        this.jTextField_EntityID.setText(Integer.toString(EntityDAO.getMaxId() + 1));
        this.jTextField_EntityName.setText("");
    }//GEN-LAST:event_NewEntityActionPerformed

    private void DeleteEntityActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_DeleteEntityActionPerformed
        // TODO add your handling code here:
        int YesOrNo = JOptionPane.showConfirmDialog(null, "Are you sure to delete?", "Delete", JOptionPane.YES_NO_OPTION);//返回的是按钮的index  i=0或者1  
        if (YesOrNo == 0) {
            String id = this.jTextField_EntityID.getText();
            EntityDAO.deleteById(id);
            System.out.println("Delete successfully！");
            fillEntityTable();
            Entity Entity = EntityDAO.getEntityByID(String.valueOf(1));
            if (Entity != null) {
                fillEntityForm(Entity);
            }
        }
    }//GEN-LAST:event_DeleteEntityActionPerformed

    private void SaveEntityActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_SaveEntityActionPerformed
        // TODO add your handling code here:
        EnableEntity = this.jCheckBox_EnableEntity.isSelected();
        EntityID = Integer.parseInt(this.jTextField_EntityID.getText());
        EntityName = this.jTextField_EntityName.getText();
        Entity Entity = new Entity(EnableEntity, EntityID, EntityName);
        if (EntityDAO.EntityIDisExisting(Entity)) {
            EntityDAO.update(Entity);
        } else {
            EntityDAO.add(Entity);
        }
        System.out.println("Save successfully！");
        JOptionPane.showMessageDialog(null, "Save successfully！", "Save", JOptionPane.INFORMATION_MESSAGE);
        fillEntityTable();
    }//GEN-LAST:event_SaveEntityActionPerformed

    private void jTextField_EntityNameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextField_EntityNameActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextField_EntityNameActionPerformed

    private void jTable_EntiySettingMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTable_EntiySettingMouseClicked
        // TODO add your handling code here:
        int selectRows = jTable_EntiySetting.getSelectedRows().length;// 取得用户所选行的行数
        DefaultTableModel tableModel = (DefaultTableModel) jTable_EntiySetting.getModel();

        if (selectRows == 1) {
            int selectedRowIndex = jTable_EntiySetting.getSelectedRow(); // 取得用户所选单行 
            EntityID = Integer.parseInt(tableModel.getValueAt(selectedRowIndex, 1).toString());
        }
        Entity Entity = EntityDAO.getEntityByID(EntityID.toString());
        if (Entity != null) {
            fillEntityForm(Entity);
        }
    }//GEN-LAST:event_jTable_EntiySettingMouseClicked

    private void jCheckBox_EnableEntityActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCheckBox_EnableEntityActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jCheckBox_EnableEntityActionPerformed

    private void jTextField_EntityIDActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextField_EntityIDActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextField_EntityIDActionPerformed

    private void jCheckBox_EnablePoolContentActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCheckBox_EnablePoolContentActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jCheckBox_EnablePoolContentActionPerformed

    private void jTextField_PoolContentIDActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextField_PoolContentIDActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextField_PoolContentIDActionPerformed

    private void jTextField_PoolContentActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextField_PoolContentActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextField_PoolContentActionPerformed

    private void NewPoolContentActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_NewPoolContentActionPerformed
        // TODO add your handling code here:
        this.jCheckBox_EnablePoolContent.setSelected(true);
        this.jTextField_PoolContentID.setText(Integer.toString(PostContentPoolDAO.getMaxId() + 1));
        this.jComboBox_PoolFirefoxProfile.setSelectedItem("Vivo");
        this.jTextField_PoolContent.setText("");
    }//GEN-LAST:event_NewPoolContentActionPerformed

    private void SavePoolContentActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_SavePoolContentActionPerformed
        // TODO add your handling code here:
        EnablePoolContent = this.jCheckBox_EnablePoolContent.isSelected();
        PoolContentID = Integer.parseInt(this.jTextField_PoolContentID.getText());
        PoolFirefoxProfile = (String) this.jComboBox_PoolFirefoxProfile.getSelectedItem();
        PoolContent = this.jTextField_PoolContent.getText();
        PostContentEntity PostContentEntity = new PostContentEntity(EnablePoolContent, PoolContentID, PoolFirefoxProfile, PoolContent);
        if (PostContentPoolDAO.PostContentIDisExisting(PostContentEntity)) {
            PostContentPoolDAO.update(PostContentEntity);
        } else {
            PostContentPoolDAO.add(PostContentEntity);
        }
        System.out.println("Save successfully！");
        JOptionPane.showMessageDialog(null, "Save successfully！", "Save", JOptionPane.INFORMATION_MESSAGE);
        fillPostContentPoolTable();
    }//GEN-LAST:event_SavePoolContentActionPerformed

    private void DeletePoolContentActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_DeletePoolContentActionPerformed
        // TODO add your handling code here:
        int YesOrNo = JOptionPane.showConfirmDialog(null, "Are you sure to delete?", "Delete", JOptionPane.YES_NO_OPTION);//返回的是按钮的index  i=0或者1  
        if (YesOrNo == 0) {
            String id = this.jTextField_PoolContentID.getText();
            PostContentPoolDAO.deleteById(id);
            System.out.println("Delete successfully！");
            fillPostContentPoolTable();
            PostContentEntity PostContentEntity = PostContentPoolDAO.getPostContentByID(String.valueOf(1));
            if (PostContentEntity != null) {
                fillPostContentForm(PostContentEntity);
            }
        }
    }//GEN-LAST:event_DeletePoolContentActionPerformed

    private void jTable_PostContentPoolMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTable_PostContentPoolMouseClicked
        // TODO add your handling code here:
        int selectRows = jTable_PostContentPool.getSelectedRows().length;// 取得用户所选行的行数
        DefaultTableModel tableModel = (DefaultTableModel) jTable_PostContentPool.getModel();

        if (selectRows == 1) {
            int selectedRowIndex = jTable_PostContentPool.getSelectedRow(); // 取得用户所选单行 
            PoolContentID = Integer.parseInt(tableModel.getValueAt(selectedRowIndex, 1).toString());
        }
        PostContentEntity PostContentEntity = PostContentPoolDAO.getPostContentByID(PoolContentID.toString());
        if (PostContentEntity != null) {
            fillPostContentForm(PostContentEntity);
        }
    }//GEN-LAST:event_jTable_PostContentPoolMouseClicked

    private void fillForm(ForumPost ForumPost) {
        this.jCheckBox_EnableThread.setSelected(ForumPost.getEnableThread());
        this.jTextField_ThreadID.setText(ForumPost.getThreadID().toString());
        //this.jTextField_FirefoxInstallationPath.setText(ForumPost.getFirefoxPath());
        this.jTextField_Profile.setText(ForumPost.getProfile());
        this.jComboBox_PostEntity.setSelectedItem(ForumPost.getPostEntity());
        this.jTextField_StartTime.setText(new java.text.SimpleDateFormat("yyyy-MM-dd HH:mm:ss").format(new java.util.Date(ForumPost.getStartTime())));
        this.jCheckBox_EnableStopTime.setSelected(ForumPost.getEnableStopTime());
        this.jTextField_StopTime.setText(new java.text.SimpleDateFormat("yyyy-MM-dd HH:mm:ss").format(new java.util.Date(ForumPost.getStopTime())));
        this.jTextField_RefreshPostCount.setText(String.valueOf(ForumPost.getRefreshPostCount()));
        this.jTextField_PostCount.setText(String.valueOf(ForumPost.getPostCount()));
        this.jTextField_FixedWaitTime.setText(String.valueOf(ForumPost.getFixedWaitTime()));
        this.jTextField_RandomWaitTime.setText(String.valueOf(ForumPost.getRandomWaitTime()));
        this.jTextField_RestWaitTime.setText(String.valueOf(ForumPost.getRestWaitTime()));
        this.jTextField_RestWaitPostCount.setText(String.valueOf(ForumPost.getRestWaitPostCount()));
        this.jTextField_PostUrl.setText(ForumPost.getPostUrl());
        this.jComboBox_PostContent.getEditor().setItem(ForumPost.getPostContent());
    }

    private void fillEntityForm(Entity Entity) {
        this.jCheckBox_EnableEntity.setSelected(Entity.getEnableEntity());
        this.jTextField_EntityID.setText(Entity.getEntityID().toString());
        this.jTextField_EntityName.setText(Entity.getEntityName());
    }

    private void fillGlobalSettingForm(GlobalSetting GlobalSetting) {
        this.jTextField_FirefoxInstallationPath.setText(GlobalSetting.getFirefoxInstallationPath());
        this.jTextField_UserAgentString.setText(GlobalSetting.getUserAgentString());
        this.jTextField_WorkstationName.setText(GlobalSetting.getWorkstationName());
    }

    private void fillPostContentForm(PostContentEntity PostContentEntity) {
        this.jCheckBox_EnablePoolContent.setSelected(PostContentEntity.getEnablePoolContent());
        this.jTextField_PoolContentID.setText(PostContentEntity.getPoolContentID().toString());
        this.jComboBox_PoolFirefoxProfile.setSelectedItem(PostContentEntity.getPoolFirefoxProfile());
        this.jTextField_PoolContent.setText(PostContentEntity.getPoolContent());
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(PostMachineApp.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(PostMachineApp.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(PostMachineApp.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(PostMachineApp.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new PostMachineApp().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton Delete;
    private javax.swing.JButton DeleteEntity;
    private javax.swing.JButton DeletePoolContent;
    private javax.swing.JButton New;
    private javax.swing.JButton NewEntity;
    private javax.swing.JButton NewPoolContent;
    private javax.swing.JButton Run;
    private javax.swing.JButton RunS;
    private javax.swing.JButton Save;
    private javax.swing.JButton SaveEntity;
    private javax.swing.JButton SavePoolContent;
    private javax.swing.JSeparator TitleSeparator_EntiySetting;
    private javax.swing.JSeparator TitleSeparator_GlobalParametersSetting;
    private javax.swing.JSeparator TitleSeparator_PostContentPool;
    private javax.swing.JSeparator TitleSeparator_TaskManagement;
    private javax.swing.JLabel Title_EntiySetting;
    private javax.swing.JLabel Title_GlobalParametersSetting;
    private javax.swing.JLabel Title_PostContentPool;
    private javax.swing.JLabel Title_TaskManagement;
    private javax.swing.JButton jButtonClearConsole;
    private javax.swing.JButton jButton_GlobalSettingSave;
    private javax.swing.JCheckBox jCheckBox_EnableEntity;
    private javax.swing.JCheckBox jCheckBox_EnablePoolContent;
    private javax.swing.JCheckBox jCheckBox_EnableStopTime;
    private javax.swing.JCheckBox jCheckBox_EnableThread;
    private javax.swing.JComboBox<String> jComboBox_PoolFirefoxProfile;
    private javax.swing.JComboBox<String> jComboBox_PostContent;
    private javax.swing.JComboBox<String> jComboBox_PostEntity;
    private javax.swing.JLabel jLabel_EntityName;
    private javax.swing.JLabel jLabel_FirefoxInstallationPath;
    private javax.swing.JLabel jLabel_FixedWaitTime;
    private javax.swing.JLabel jLabel_PoolContent;
    private javax.swing.JLabel jLabel_PoolPostEntity;
    private javax.swing.JLabel jLabel_PostContent;
    private javax.swing.JLabel jLabel_PostEntity;
    private javax.swing.JLabel jLabel_PostNumber;
    private javax.swing.JLabel jLabel_PostUrl;
    private javax.swing.JLabel jLabel_Profile;
    private javax.swing.JLabel jLabel_RandomWaitTime;
    private javax.swing.JLabel jLabel_RefreshPostCount;
    private javax.swing.JLabel jLabel_RestWaitPostCount;
    private javax.swing.JLabel jLabel_RestWaitTime;
    private javax.swing.JLabel jLabel_StartTime;
    private javax.swing.JLabel jLabel_UserAgentString;
    private javax.swing.JLabel jLabel_Workstation;
    private javax.swing.JPanel jPanel_Bottom;
    private javax.swing.JPanel jPanel_Console;
    private javax.swing.JPanel jPanel_EntityManagement;
    private javax.swing.JPanel jPanel_EntitySetting;
    private javax.swing.JPanel jPanel_EntiySettingBottom;
    private javax.swing.JPanel jPanel_EntiySettingTop;
    private javax.swing.JPanel jPanel_GlobalSetting;
    private javax.swing.JPanel jPanel_PostContentPool;
    private javax.swing.JPanel jPanel_PostContentPoolBottom;
    private javax.swing.JPanel jPanel_PostContentPoolTop;
    private javax.swing.JPanel jPanel_TaskManagement;
    private javax.swing.JPanel jPanel_Top;
    private javax.swing.JScrollPane jScrollPane;
    private javax.swing.JScrollPane jScrollPane_Console;
    private javax.swing.JScrollPane jScrollPane_EntiySetting;
    private javax.swing.JScrollPane jScrollPane_PostContentPool;
    private javax.swing.JTabbedPane jTabbedPane_PostMachineApp;
    private javax.swing.JTabbedPane jTabbedPane_SystemSettings;
    private javax.swing.JTable jTable;
    private javax.swing.JTable jTable_EntiySetting;
    private javax.swing.JTable jTable_PostContentPool;
    private javax.swing.JTextArea jTextArea_Console;
    private javax.swing.JTextField jTextField_EntityID;
    private javax.swing.JTextField jTextField_EntityName;
    private javax.swing.JTextField jTextField_FirefoxInstallationPath;
    private javax.swing.JTextField jTextField_FixedWaitTime;
    private javax.swing.JTextField jTextField_GlobalSettingID;
    private javax.swing.JTextField jTextField_PoolContent;
    private javax.swing.JTextField jTextField_PoolContentID;
    private javax.swing.JTextField jTextField_PostCount;
    private javax.swing.JTextField jTextField_PostUrl;
    private javax.swing.JTextField jTextField_Profile;
    private javax.swing.JTextField jTextField_RandomWaitTime;
    private javax.swing.JTextField jTextField_RefreshPostCount;
    private javax.swing.JTextField jTextField_RestWaitPostCount;
    private javax.swing.JTextField jTextField_RestWaitTime;
    private javax.swing.JTextField jTextField_StartTime;
    private javax.swing.JTextField jTextField_StopTime;
    private javax.swing.JTextField jTextField_ThreadID;
    private javax.swing.JTextField jTextField_UserAgentString;
    private javax.swing.JTextField jTextField_WorkstationName;
    // End of variables declaration//GEN-END:variables
    private Boolean EnableThread;
    private Integer ThreadID;
    private String FirefoxPath;
    private String Profile;
    private String PostEntity;
    private String StartTimeString;
    private long StartTime;
    private Boolean EnableStopTime;
    private String StopTimeString;
    private long StopTime;
    private Integer RefreshPostCount;
    private long PostCount;
    private Integer FixedWaitTime;
    private Integer RandomWaitTime;
    private Integer RestWaitTime;
    private Integer RestWaitPostCount;
    private String PostUrl;
    private String PostContent;
    private String GlobalSettingID;
    private String FirefoxInstallationPath;
    private String UserAgentString;
    private String WorkstationName;

    private static Boolean EnableEntity;
    private static Integer EntityID;
    private static String EntityName;

    private static Boolean EnablePoolContent;
    private static Integer PoolContentID;
    private static String PoolFirefoxProfile;
    private static String PoolContent;

}
